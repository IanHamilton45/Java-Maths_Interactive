//Author: Jonathan Oliver
package learningapp;

import administration.Login;
import java.awt.Window;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import javax.swing.JOptionPane;

public class editContent extends javax.swing.JFrame {
private List<String[]> learningData = new ArrayList<String[]>();
// array for storing learning data
private List<String[]> addData = new ArrayList<String[]>();   
// array for storing data to be added to file
private File outFile;
//used to output the data
private int userID;

    public editContent(int userID) {
        initComponents();
    }
    
    private Connection connectToDB(){
    String url = "jdbx:sqlite:Database.db";
    Connection conn = null;
    try{
        conn = DriverManager.getConnection(url);
    } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "failed to connect to DB", "Connection Failed", JOptionPane.PLAIN_MESSAGE);
    }
    return conn;
    }
    
    private void userID() {

        String userName = null;

        String userSql = "SELECT FName, LName FROM UserDetails WHERE user_ID = ?";

        try {
            Connection conn = dbConn.connectToDB();

            PreparedStatement pstmt = conn.prepareStatement(userSql);
            pstmt.setInt(1, userID);
            ResultSet userDetailsResults = pstmt.executeQuery();

            while (userDetailsResults.next()) {
                String Fname = userDetailsResults.getString("FName");
                String Lname = userDetailsResults.getString("LName");
                userName = (Fname + " " + Lname);
            }
            lblUserDetails.setText(userName);
        } catch (SQLException e) {

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        lblLogo = new javax.swing.JLabel();
        lblUserDetails = new javax.swing.JLabel();
        lblUserLevel = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        lblInformation = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        contentArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        ansTxt1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        ansTxt3 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        ansTxt2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        ansTxt4 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        IDTxt1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        deleteBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        subTxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(179, 218, 255));

        lblLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Additional/logo.png"))); // NOI18N
        lblLogo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblUserDetails.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblUserDetails.setForeground(new java.awt.Color(5, 24, 42));
        lblUserDetails.setText("FName LName (UserID)");

        lblUserLevel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblUserLevel.setForeground(new java.awt.Color(5, 24, 42));
        lblUserLevel.setText("CONTENT CREATOR");

        btnLogout.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnLogout.setForeground(new java.awt.Color(5, 24, 42));
        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        lblInformation.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblInformation.setForeground(new java.awt.Color(200, 0, 0));
        lblInformation.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblInformation.setText(" ");
        lblInformation.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel7.setText("Enter the content you wish to change, selecting the ID of the section");

        contentArea.setColumns(20);
        contentArea.setRows(5);
        jScrollPane1.setViewportView(contentArea);

        jLabel2.setText("Answer 1");

        jLabel4.setText("Answer 3");

        jLabel3.setText("Answer 2");

        jLabel5.setText("Answer 4");

        jLabel6.setText("ID: ");

        jLabel8.setText("If deleting content; choose ID then press delete");

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        exitBtn.setText("Exit ");
        exitBtn.setToolTipText("");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Subject");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(jSeparator2)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUserDetails)
                            .addComponent(lblUserLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLogout)
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 289, Short.MAX_VALUE)
                        .addComponent(lblInformation, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(156, 156, 156))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel1)
                                .addGap(28, 28, 28)
                                .addComponent(subTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(deleteBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(updateBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exitBtn)
                .addGap(35, 35, 35))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(14, 14, 14)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addComponent(jLabel6))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(IDTxt1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(ansTxt1, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                                        .addComponent(ansTxt2))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel5)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(ansTxt4))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(ansTxt3, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addContainerGap(265, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(lblUserDetails)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblUserLevel))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnLogout)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 300, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(subTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblInformation)
                .addGap(82, 82, 82)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteBtn)
                    .addComponent(updateBtn)
                    .addComponent(exitBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(4, 4, 4))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(118, 118, 118)
                    .addComponent(jLabel7)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ansTxt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ansTxt3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel4))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ansTxt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ansTxt4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel5))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(IDTxt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addGap(219, 219, 219)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        //--Close all current windows
        for (Window w : java.awt.Window.getWindows()) {
            w.setVisible(false);
            w.dispose();
        }

        //--Open the Login window centre-screen
        Login loginFrame = new Login();
        loginFrame.setLocationRelativeTo(null);
        loginFrame.setVisible(true);
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void clearFields(){
        IDTxt1.setText(null);
        ansTxt1.setText(null);
        ansTxt2.setText(null);
        ansTxt3.setText(null);
        ansTxt4.setText(null);
        contentArea.setText(null);
        subTxt.setText(null);
    }
    
    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed

        // takes input from the user
        String code1 = IDTxt1.getText();
        String content = contentArea.getText();
        String ans1 = ansTxt1.getText();
        String ans2 = ansTxt2.getText();
        String ans3 = ansTxt3.getText();
        String ans4 = ansTxt4.getText();
        String sub1 = subTxt.getText();

        // array to hold the data from file.
        ArrayList<String> deleteArray = new ArrayList<>();

         if ("Addition".equals(sub1))
        {
        
        try {
            try (FileReader fr = new FileReader("AdditionBasic.txt")){
                Scanner reader =  new Scanner(fr);
                String line;
                String[] lineArr;

                while ((line=reader.nextLine())!=null){
                    // checks to ensure ID is corrwect
                    lineArr = line.split(";");
                    if(lineArr[0].equals(code1)){

                        // if the search id is present
                        // add old data and new data
                        deleteArray.remove(
                            code1 + "; " +
                            content + "; "  +
                            ans1 + "; " +
                            ans2 + "; " +
                            ans3 + "; " +
                            ans4 + "; ");

                    } else {
                        // if the ID doesnt exist add line as it is
                        deleteArray.add(line);
                    }
                }
                // close the file after reading
                fr.close();

            } catch (Exception e){
            }
        } catch (Exception e){
        }
        try {
            // open the print writer to add data from array to file
            try (PrintWriter pr = new PrintWriter("AdditionBasic.txt")){

                for (String str : deleteArray){
                    // add all the data to the file
                    pr.println(str);
                }
                // close the file once again
                pr.close();
                JOptionPane.showMessageDialog(rootPane, "Succesfully Removed Content");
                clearFields();

            }catch (Exception e){
            }
        } catch (Exception e){

        }
        
        }
         
          if ("Division".equals(sub1))
        {
        
        try {
            try (FileReader fr1 = new FileReader("division.txt")){
                Scanner reader =  new Scanner(fr1);
                String line;
                String[] lineArr1;

                while ((line=reader.nextLine())!=null){
                    // checks to ensure ID is corrwect
                    lineArr1 = line.split(";");
                    if(lineArr1[0].equals(code1)){

                        // if the search id is present
                        // add old data and new data
                        deleteArray.remove(
                            code1 + "; " +
                            content + "; "  +
                            ans1 + "; " +
                            ans2 + "; " +
                            ans3 + "; " +
                            ans4 + "; ");

                    } else {
                        // if the ID doesnt exist add line as it is
                        deleteArray.add(line);
                    }
                }
                // close the file after reading
                fr1.close();

            } catch (Exception e){
            }
        } catch (Exception e){
        }
        try {
            // open the print writer to add data from array to file
            try (PrintWriter pr1 = new PrintWriter("Division.txt")){

                for (String str1 : deleteArray){
                    // add all the data to the file
                    pr1.println(str1);
                }
                // close the file once again
                pr1.close();
                JOptionPane.showMessageDialog(rootPane, "Succesfully Removed Content");
                clearFields();

            }catch (Exception e){
            }
        } catch (Exception e){

        }
        
        }
          
          
           if ("Subtraction".equals(sub1))
        {
        
        try {
            try (FileReader fr2 = new FileReader("Subtraction.txt")){
                Scanner reader =  new Scanner(fr2);
                String line;
                String[] lineArr2;

                while ((line=reader.nextLine())!=null){
                    // checks to ensure ID is corrwect
                    lineArr2 = line.split(";");
                    if(lineArr2[0].equals(code1)){

                        // if the search id is present
                        // add old data and new data
                        deleteArray.remove(
                            code1 + "; " +
                            content + "; "  +
                            ans1 + "; " +
                            ans2 + "; " +
                            ans3 + "; " +
                            ans4 + "; ");

                    } else {
                        // if the ID doesnt exist add line as it is
                        deleteArray.add(line);
                    }
                }
                // close the file after reading
                fr2.close();

            } catch (Exception e){
            }
        } catch (Exception e){
        }
        try {
            // open the print writer to add data from array to file
            try (PrintWriter pr2 = new PrintWriter("Subtraction.txt")){

                for (String str2 : deleteArray){
                    // add all the data to the file
                    pr2.println(str2);
                }
                // close the file once again
                pr2.close();
                JOptionPane.showMessageDialog(rootPane, "Succesfully Removed Content");
                clearFields();

            }catch (Exception e){
            }
        } catch (Exception e){

        }
        
        }
           
         if ("Multiplication".equals(sub1))
        {
        
        try {
            try (FileReader fr3 = new FileReader("Multiplication.txt")){
                Scanner reader =  new Scanner(fr3);
                String line;
                String[] lineArr3;

                while ((line=reader.nextLine())!=null){
                    // checks to ensure ID is corrwect
                    lineArr3 = line.split(";");
                    if(lineArr3[0].equals(code1)){

                        // if the search id is present
                        // add old data and new data
                        deleteArray.remove(
                            code1 + "; " +
                            content + "; "  +
                            ans1 + "; " +
                            ans2 + "; " +
                            ans3 + "; " +
                            ans4 + "; ");

                    } else {
                        // if the ID doesnt exist add line as it is
                        deleteArray.add(line);
                    }
                }
                // close the file after reading
                fr3.close();

            } catch (Exception e){
            }
        } catch (Exception e){
        }
        try {
            // open the print writer to add data from array to file
            try (PrintWriter pr3 = new PrintWriter("Multiplication.txt")){

                for (String str3 : deleteArray){
                    // add all the data to the file
                    pr3.println(str3);
                }
                // close the file once again
                pr3.close();
                JOptionPane.showMessageDialog(rootPane, "Succesfully Removed Content");
                clearFields();

            }catch (Exception e){
            }
        } catch (Exception e){

        }
        
        }

    }//GEN-LAST:event_deleteBtnActionPerformed

    
  
    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed

        // takes input from the user
        String code1 = IDTxt1.getText();
        String content = contentArea.getText();
        String ans1 = ansTxt1.getText();
        String ans2 = ansTxt2.getText();
        String ans3 = ansTxt3.getText();
        String ans4 = ansTxt4.getText();
        String sub1 = subTxt.getText();

        // array to hold the data from file.
        ArrayList<String> editArray = new ArrayList<>();
        ArrayList<String> editArray1 = new ArrayList<>();
        ArrayList<String> editArray2 = new ArrayList<>();
        ArrayList<String> editArray3 = new ArrayList<>();
        
        
        // printer writer to print to addition file
        if ("Addition".equals(sub1))
        {
            
        

        try {
            try (FileReader fr = new FileReader("AdditionBasic.txt")){
                Scanner reader =  new Scanner(fr);
                String line;
                String[] lineArr;

                while ((line=reader.nextLine())!=null){
                    // checks to ensure ID is corrwect
                    lineArr = line.split(";");
                    if(lineArr[0].equals(code1)){

                        // if the search id is present
                        // add old data and new data
                        editArray.add(
                            code1 + "; " +
                            sub1 + "; " +        
                            content + "; "  +
                            ans1 + "; " +
                            ans2 + "; " +
                            ans3 + "; " +
                            ans4 + "; ");

                    } else {
                        // if the ID doesnt exist add line as it is
                        editArray.add(line);
                    }
                }
                // close the file after reading
                fr.close();

            } catch (Exception e){
            }
        } catch (Exception e){
        }
        try {
            // open the print writer to add data from array to file
            try (PrintWriter pr = new PrintWriter("AdditionBasic.txt")){

                for (String str : editArray){
                    // add all the data to the file
                    pr.println(str);
                }
                // close the file once again
                pr.close();
                JOptionPane.showMessageDialog(rootPane, "Succesfully edited Content");
                clearFields();
            }catch (Exception e){
            }
        } catch (Exception e){

        }
        } 
        
        // print writer to print to division TXT file
        
        if ("division".equals(sub1))
                {
            
            
        try {
            try (FileReader fr1 = new FileReader("Division.txt")){
                Scanner reader =  new Scanner(fr1);
                String line;
                String[] lineArr1;

                while ((line=reader.nextLine())!=null){
                    // checks to ensure ID is corrwect
                    lineArr1 = line.split(";");
                    if(lineArr1[0].equals(code1)){

                        // if the search id is present
                        // add old data and new data
                        editArray1.add(
                            code1 + "; " +
                            sub1 + "; " +        
                            content + "; "  +
                            ans1 + "; " +
                            ans2 + "; " +
                            ans3 + "; " +
                            ans4 + "; ");

                    } else {
                        // if the ID doesnt exist add line as it is
                        editArray1.add(line);
                    }
                }
                // close the file after reading
                fr1.close();

            } catch (Exception e){
            }
        } catch (Exception e){
        }
        try {
            // open the print writer to add data from array to file
            try (PrintWriter pr1 = new PrintWriter("Division.txt")){

                for (String str1 : editArray1){
                    // add all the data to the file
                    pr1.println(str1);
                }
                // close the file once again
                pr1.close();
                JOptionPane.showMessageDialog(rootPane, "Succesfully edited Content");
                
                
                clearFields();
            }catch (Exception e){
            }
        } catch (Exception e){

        }
        }
        
        //print writer to print content to subtraction TXT file
        if ("Subtraction".equals(sub1)){
            
            
        try {
            try (FileReader fr3 = new FileReader("Subtraction.txt")){
                Scanner reader =  new Scanner(fr3);
                String line;
                String[] lineArr3;

                while ((line=reader.nextLine())!=null){
                    // checks to ensure ID is corrwect
                    lineArr3 = line.split(";");
                    if(lineArr3[0].equals(code1)){

                        // if the search id is present
                        // add old data and new data
                        editArray3.add(
                            code1 + "; " +
                            sub1 + "; " +        
                            content + "; "  +
                            ans1 + "; " +
                            ans2 + "; " +
                            ans3 + "; " +
                            ans4 + "; ");

                    } else {
                        // if the ID doesnt exist add line as it is
                        editArray3.add(line);
                    }
                }
                // close the file after reading
                fr3.close();

            } catch (Exception e){
            }
        } catch (Exception e){
        }
        try {
            // open the print writer to add data from array to file
            try (PrintWriter pr3 = new PrintWriter("Subtraction.txt")){

                for (String str3 : editArray3){
                    // add all the data to the file
                    pr3.println(str3);
                }
                // close the file once again
                pr3.close();
                JOptionPane.showMessageDialog(rootPane, "Succesfully edited Content");
                
                
                clearFields();
            }catch (Exception e){
            }
        } catch (Exception e){

        }
        }
        // print writer to print to multiplications TXT file
        if ("Multiplication".equals(sub1))
                {
            
            
        try {
            try (FileReader fr2 = new FileReader("Multiplication.txt")){
                Scanner reader =  new Scanner(fr2);
                String line;
                String[] lineArr2;

                while ((line=reader.nextLine())!=null){
                    // checks to ensure ID is corrwect
                    lineArr2 = line.split(";");
                    if(lineArr2[0].equals(code1)){

                        // if the search id is present
                        // add old data and new data
                        editArray2.add(
                            code1 + "; " +
                            sub1 + "; " +        
                            content + "; "  +
                            ans1 + "; " +
                            ans2 + "; " +
                            ans3 + "; " +
                            ans4 + "; ");

                    } else {
                        // if the ID doesnt exist add line as it is
                        editArray2.add(line);
                    }
                }
                // close the file after reading
                fr2.close();

            } catch (Exception e){
            }
        } catch (Exception e){
        }
        try {
            // open the print writer to add data from array to file
            try (PrintWriter pr2 = new PrintWriter("Multiplication.txt")){

                for (String str2 : editArray2){
                    // add all the data to the file
                    pr2.println(str2);
                }
                // close the file once again
                pr2.close();
                JOptionPane.showMessageDialog(rootPane, "Succesfully edited Content");
                
                
                clearFields();
            }catch (Exception e){
            }
        } catch (Exception e){

        }
        }
         
    }//GEN-LAST:event_updateBtnActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        mainLearningGui mlg = new mainLearningGui(1);
        mlg.setVisible(true);
        dispose();
    }//GEN-LAST:event_exitBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(editContent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(editContent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(editContent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(editContent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new editContent(1).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField IDTxt1;
    private javax.swing.JTextField ansTxt1;
    private javax.swing.JTextField ansTxt2;
    private javax.swing.JTextField ansTxt3;
    private javax.swing.JTextField ansTxt4;
    private javax.swing.JButton btnLogout;
    private javax.swing.JTextArea contentArea;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton exitBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblInformation;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblUserDetails;
    private javax.swing.JLabel lblUserLevel;
    private javax.swing.JTextField subTxt;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
